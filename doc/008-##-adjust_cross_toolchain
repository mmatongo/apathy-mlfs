# tc:		adjust cross tool chain

# adjustment is needed when host has a different libc than target.
# otherwise gcc-pass1 of /tools will fail to build

# 1 >> dump current cross-gcc specs 
export SPECFILE=`dirname $(${NL_TARGET}-gcc -print-libgcc-file-name)`/specs &&
${NL_TARGET}-gcc -dumpspecs > specs

# 2 >> modify dumped specs file to add the /tools prefix.
sed -i 's/\/lib\/ld-musl-x86_64.so.1/\/tools\/lib\/ld-musl-x86_64.so.1/g' specs

# i >> check the modified specs file
grep "/tools/lib/ld-musl-x86_64.so.1" specs  --color=auto

# 3 >> install modified specs to the cross toolchain
mv -v specs $SPECFILE && unset SPECFILE

# 4 >> sanity check for the toolchain
echo 'int main(){}' > dummy.c
${NL_TARGET}-gcc dummy.c
${NL_TARGET}-readelf -l a.out | grep Requesting

# i >> output should be:
# [Requesting program interpreter: /tools/lib/ld-musl-x86_64.so.1]

# 5 >> remove the sanity check files.
rm -v a.out dummy.c 
