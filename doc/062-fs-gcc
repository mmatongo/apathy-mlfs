# fs:		gcc-9.2.0
# sauce:	http://isl.gforge.inria.fr/isl-0.19.tar.xz

# 1 >> add the isl source
tar xf "${saucedir}"/isl-0.19.tar.xz
mv -v isl-0.19 isl

# 2 
patch -Np0 -i "${patchdir}"/gcc-9.2.0/0010-ldbl128-config.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/ada-shared.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/darn.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/fix-cxxflags-passing.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/fix-musl-execinfo.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/gccgo-musl.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/invalid_tls_model.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/libffi_gnulinux.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/libgcc-musl-ldbl128-config.patch
patch -Np1 -i "${patchdir}"/gcc-9.2.0/libgnarl-musl.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/musl-ada.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/no-stack_chk_fail_local.patch
patch -Np0 -i "${patchdir}"/gcc-9.2.0/ppc64-pure64.patch

# 3 >> change the default directory name for 64-bit libraries to /lib
sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64

# 4 >> _FORTIFY_SOURCE needs an optimization level.
sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {gcc,libiberty}/configure

# 5
mkdir -v build && cd build

SED=sed \
libat_cv_have_ifunc=no \
../configure \
 --prefix=/usr \
 --build="x86_64-linux-musl" \
 --with-system-zlib \
 --with-isl \
 --with-linker-hash-style=gnu \
 --enable-languages=c,c++ \
 --enable-shared \
 --enable-threads=posix \
 --enable-c99 \
 --enable-long-long \
 --enable-clocale=generic \
 --enable-languages=c,c++ \
 --enable-plugins \
 --enable-tls \
 --enable-lto \
 --enable-libstdcxx-time \
 --enable-checking=release \
 --enable-fully-dynamic-string \
 --enable-default-pie \
 --enable-default-ssp \
 --enable-vtable-verify \
 --enable-linker-build-id \
 --enable-fast-character \
 --disable-libstdcxx-pch \
 --disable-nls \
 --disable-multilib \
 --disable-bootstrap \
 --disable-symvers \
 --disable-libsanitizer \
 --disable-target-libiberty \
 --disable-libunwind-exceptions

# 6
make && make install

# 7 >> create historical symlinks:
ln -sv ../usr/bin/cpp /lib
ln -sv gcc /usr/bin/cc

# 8 >> enable lto with:
install -v -dm755 /usr/lib/bfd-plugins
ln -sfv ../../libexec/gcc/x86_64-linux-musl/9.2.0/liblto_plugin.so /usr/lib/bfd-plugins/
mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib

# 9.0 >> dump the specs file
export SPECFILE=`dirname $(gcc -print-libgcc-file-name)`/specs
gcc -dumpspecs > specs

# 9.1 >> modify the specs file to match this
#
# *cpp:
# %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} -I /usr/lib/gcc/x86_64-linux-musl/9.2.0/include-fixed

# 9.2 >> install the modified specs file
cp -v specs $SPECFILE
unset SPECFILE

# 10 >> sanity check
echo 'int main(){}' > dummy.c
cc dummy.c -v -Wl,--verbose &> dummy.log

# 10.1
readelf -l a.out | grep ': /lib'
# should print:
# [Requesting program interpreter: /lib/ld-musl-x86_64.so.1]

# 10.2
grep  'crt[1in].o succeeded' dummy.log
# should print:
# attempt to open /usr/lib/gcc/x86_64-linux-musl/9.2.0/../../../../lib/Scrt1.o succeeded
# attempt to open /usr/lib/gcc/x86_64-linux-musl/9.2.0/../../../../lib/crti.o succeeded
# attempt to open /usr/lib/gcc/x86_64-linux-musl/9.2.0/../../../../lib/crtn.o succeeded

# 10.3
grep -B2 '^ /usr/lib/gcc' dummy.log
# should print:
# #include <...> search starts here:
# /usr/include
# /usr/lib/gcc/x86_64-linux-musl/9.2.0/include

# 10.4
grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'
# should print:
# SEARCH_DIR("/usr/x86_64-pc-linux-musl/lib64")
# SEARCH_DIR("/usr/local/lib64")
# SEARCH_DIR("/lib64")
# SEARCH_DIR("/usr/lib64")
# SEARCH_DIR("/usr/x86_64-pc-linux-musl/lib")
# SEARCH_DIR("/usr/local/lib")
# SEARCH_DIR("/lib")
# SEARCH_DIR("/usr/lib");

# 11 >> if all went smoothly, clear the sanity check files with:
rm -v dummy.c a.out dummy.log
