# set mlfs, create partition and mount it to $MLFS
export    MLFS=/mnt/mlfs
mkfs.etx4 /dev/sdXY
mkdir -pv $MLFS
mount     /dev/sdXY $MLFS

# create directories to build tools and link them to host's root directory:
mkdir -v $MLFS/cross-tools
mkdir -v $MLFS/tools
ln -sv   $MLFS/cross-tools /
ln -sv   $MLFS/tools /

# create the patch, source and table directories
export patchdir="${MLFS}/mss/work/patches"
export saucedir="${MLFS}/mss/work/sources"
export filesdir="${MLFS}/mss/work/files"

mkdir -pv "${patchdir}"
mkdir -pv "${saucedir}"
mkdir -pv "${filesdir}"

mkdir -pv $MLFS/mss/work/table

# i >>instead of creating these dirs, you can also symlink
# the files, patches and sources files from the cloned repo.

# download the sources
cd "${saucedir}"
wget -i /path/to/wget-list

# create user and group, change ownership to allow installation of tools
groupadd mlfs
useradd -s /bin/yash -g mlfs -m -k /dev/null mlfs
passwd mlfs

chown -v  mlfs $MLFS/cross-tools
chown -vR mlfs $MLFS/mss
chmod -v  a+wt $MLFS/mss
chown -v  mlfs $MLFS/tools

# now run as mlfs user.
# all toolchain software should be built as this user, unless specified.
su - mlfs

# set up the environment.
cat > ~/.yashrc << "EOF"
set +h
umask 022

YASH_PS1=' [mlfs] ${${PWD:/~/\~}##*/}\fc % \fD'

set --vi
set --brace-expand
set --extended-glob
set --no-unset
set --notify-le
set --hist-space

bindkey -av '\^L' clear-and-redraw-all
case $- in (*m*) trap - TSTP TTIN TTOU; esac

export MLFS=/mnt/mlfs
export patchdir="${MLFS}/mss/work/patches"
export saucedir="${MLFS}/mss/work/sources"
export filesdir="${MLFS}/mss/work/files"

export LC_ALL=POSIX
export PATH=/cross-tools/bin:/tools/bin:/bin:/usr/bin

export MAKEFLAGS="-j 3"

export MLFS_TARGET="x86_64-mlfs-linux-musl"
export MLFS_HOST="x86_64-cross-linux-gnu"

export MLFS_ARCH=x86
export MLFS_CPU="x86-64"

unset CFLAGS
unset CXXFLAGS

alias l="ls -Askh --color=tty"
alias ll="ls -Askhw1 --color=tty"
alias lll="ls -la --color=tty"
alias ln="ln -v"
alias cp="cp -v"
alias mv="mv -v"
EOF

# load the stored environment
env -i HOME=$HOME TERM=$TERM /bin/yash

# source .yashrc and check the variables
. /home/mlfs/.yashrc

printf " > MLFS\t: $MLFS\n"
printf " > LC_ALL\t: $LC_ALL\n"
printf " > PATH\t: $PATH\n"
printf " > MLFS_TARGET\t: $MLFS_TARGET\n"
printf " > MLFS_HOST\t: $MLFS_HOST\n"
printf " > MLFS_ARCH\t: $MLFS_ARCH\n"
printf " > MLFS_CPU\t: $MLFS_CPU\n"
